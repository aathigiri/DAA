1.
# Test Cases
test_cases = [
    [],                      # Expected Output: []
    [1],                     # Expected Output: [1]
    [7, 7, 7, 7],           # Expected Output: [7, 7, 7, 7]
    [-5, -1, -3, -2, -4]    # Expected Output: [-5, -4, -3, -2, -1]
]

# Processing each test case
for case in test_cases:
    if case:  # Check if the list is not empty
        sorted_case = sorted(case)
    else:
        sorted_case = case
    print(sorted_case)

2.
# Selection Sort Algorithm
array = [5, 2, 9, 1, 5, 6]
n = len(array)

for i in range(n):
    min_index = i
    for j in range(i + 1, n):
        if array[j] < array[min_index]:
            min_index = j
    # Swap the found minimum element with the first element
    array[i], array[min_index] = array[min_index], array[i]

print("Sorted array:", array)

3.
# Bubble Sort Algorithm
input_lists = [
    [64, 25, 12, 22, 11],
    [29, 10, 14, 37, 13],
    [3, 5, 2, 1, 4],
    [1, 2, 3, 4, 5],
    [5, 4, 3, 2, 1]
]

for input_list in input_lists:
    arr = input_list.copy()
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    print(f"Input: {input_list} => Sorted Output: {arr}")

4.
array = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]

for i in range(1, len(array)):
    key = array[i]
    j = i - 1
    while j >= 0 and array[j] > key:
        array[j + 1] = array[j]
        j -= 1
    array[j + 1] = key

print(array)  # Output: [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]

5. 
arr = [2, 3, 4, 7, 11]
k = 5

missing_count = 0
current = 1
index = 0

while missing_count < k:
    if index < len(arr) and arr[index] == current:
        index += 1
    else:
        missing_count += 1
        if missing_count == k:
            print(current)
    current += 1

6.
nums = [1, 2, 3, 1]
left, right = 0, len(nums) - 1

while left < right:
    mid = (left + right) // 2
    if nums[mid] < nums[mid + 1]:
        left = mid + 1
    else:
        right = mid

peak_index = left
print(peak_index)  # Output: 2

7.
haystack = "sadbutsad"
needle = "sad"

index = haystack.find(needle)
print(index)  # Output: 0

8.
words = ["mass", "as", "hero", "superhero"]
result = [word for word in words if any(word in other for other in words if word != other)]
print(result)
